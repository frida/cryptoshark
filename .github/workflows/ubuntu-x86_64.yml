name: Ubuntu x86_64

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Resolve Version
      id: resolve-version
      run: |
        echo "::set-output name=version::$(git describe --tags --exclude "latest-*")"
      shell: bash

    - name: Install Build Dependencies
      run: |
        sudo apt-get install libatspi2.0-dev libgtk-3-dev libharfbuzz-dev '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libwayland-dev

    - name: Resolve Qt Prefix
      id: resolve-qt-prefix
      run: |
        echo "::set-output name=path::$(cd "$GITHUB_WORKSPACE/../" && pwd)/dist"
      shell: bash

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: ${{ steps.resolve-qt-prefix.outputs.path }}
        key: qt-ubuntu-20.04-x86_64

    - name: Build Qt
      if: steps.cache-qt.outputs.cache-hit != 'true'
      run: |
        . tools/linux/activate-env
        get-qt
        build-qt

    - name: Build Cryptoshark Package
      run: |
        ./build
        ./tools/linux/mkdeb ../build-cryptoshark-x86_64/app/cryptoshark ${{ steps.resolve-version.outputs.version }} amd64

    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest-ubuntu-x86_64
        prerelease: true
        title: Latest Ubuntu 20.04 Build for x86_64
        files: |
          ../build-cryptoshark-x86_64/app/*.deb
